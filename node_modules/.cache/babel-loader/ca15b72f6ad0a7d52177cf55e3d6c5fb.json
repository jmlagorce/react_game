{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/react_game/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport Jumbo from './components/Jumbo';\nimport GameImg from './components/GameImg';\nimport images from './images.json';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      highScore: 0,\n      images: images,\n      clickedImages: []\n    };\n\n    this.clicked = event => {\n      //old clicked get the value of clickedImages\n      let newClickedImages = this.state.clickedImages; //new clicked images , added the clicked value\n\n      newClickedImages.push(event.target.dataset.id); //replace clicked images with the new clicked images array\n\n      this.setState({\n        clickedImages: this.state.clickedImages.push()\n      });\n      console.log(this.state.clickedImages);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Jumbo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), this.state.images.map(image => React.createElement(GameImg, {\n      image: image,\n      myFunc: this.clicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josh/Desktop/react_game/src/App.js"],"names":["React","Component","Header","Jumbo","GameImg","images","App","state","score","highScore","clickedImages","clicked","event","newClickedImages","push","target","dataset","id","setState","console","log","render","map","image"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,SAAS,EAAE,CAFL;AAGNJ,MAAAA,MAAM,EAAEA,MAHF;AAINK,MAAAA,aAAa,EAAE;AAJT,KADkB;;AAAA,SAQ1BC,OAR0B,GAQfC,KAAD,IAAW;AACnB;AACA,UAAIC,gBAAgB,GAAG,KAAKN,KAAL,CAAWG,aAAlC,CAFmB,CAInB;;AACAG,MAAAA,gBAAgB,CAACC,IAAjB,CAAsBF,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqBC,EAA3C,EALmB,CAMnB;;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBI,IAAzB;AAAhB,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,aAAvB;AACD,KAjByB;AAAA;;AAqB1BW,EAAAA,MAAM,GAAE;AACR,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACA,MAAA,KAAK,EAAI,KAAKd,KAAL,CAAWC,KADpB;AAEA,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWE,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOG,KAAKF,KAAL,CAAWF,MAAX,CAAkBiB,GAAlB,CACEC,KAAD,IAGF,oBAAC,OAAD;AACA,MAAA,KAAK,EAAIA,KADT;AAEA,MAAA,MAAM,EAAI,KAAKZ,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJC,CAPH,CAFF;AAwBK;;AA9CqB;;AAiD5B,eAAeL,GAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport Header from './components/Header'\nimport Jumbo from './components/Jumbo'\nimport GameImg from './components/GameImg'\nimport images from './images.json'\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    score: 0,\n    highScore: 0,\n    images: images,\n    clickedImages: []\n  \n  }\n  clicked = (event) => {\n    //old clicked get the value of clickedImages\n    let newClickedImages = this.state.clickedImages\n\n    //new clicked images , added the clicked value\n    newClickedImages.push(event.target.dataset.id)\n    //replace clicked images with the new clicked images array\n    this.setState({clickedImages: this.state.clickedImages.push()})\n    console.log(this.state.clickedImages)\n  }\n\n  \n\n  render(){\n  return (\n    \n    <div>\n      <Header\n      score = {this.state.score}\n      highScore = {this.state.highScore}\n      />\n      <Jumbo />\n\n      {this.state.images.map(\n        (image) => \n\n  \n      <GameImg \n      image = {image}\n      myFunc = {this.clicked}\n      />\n  )}\n      \n    \n    </div>\n    \n  \n  );\n      }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}